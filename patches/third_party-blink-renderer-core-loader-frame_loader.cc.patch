diff --git a/third_party/blink/renderer/core/loader/frame_loader.cc b/third_party/blink/renderer/core/loader/frame_loader.cc
index ebc44803f9acbe0dc814b95e08cab9a6aa252752..48b76d828e4a9d896f4d31cef120e8943ccfde35 100644
--- a/third_party/blink/renderer/core/loader/frame_loader.cc
+++ b/third_party/blink/renderer/core/loader/frame_loader.cc
@@ -111,6 +111,13 @@
 #include "third_party/blink/renderer/platform/wtf/text/cstring.h"
 #include "third_party/blink/renderer/platform/wtf/text/wtf_string.h"
 
+// #include "brave/third_party/blink/brave_page_graph/buildflags/buildflags.h"
+// #if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+// #include "third_party/blink/renderer/core/dom/document.h"
+// #include "third_party/blink/renderer/core/dom/dom_node_ids.h"
+// #include "brave/third_party/blink/brave_page_graph/page_graph.h"
+// #endif
+
 namespace blink {
 
 using namespace html_names;
@@ -953,6 +960,23 @@ void FrameLoader::StartNavigation(const FrameLoadRequest& passed_request,
                                     request.ClientRedirectReason());
   }
 
+// #if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  // First see if there is a parent
+  // {
+  //   Frame* parent_frame = frame_->Tree().Parent();
+  //   if (parent_frame != nullptr &&
+  //       parent_frame->IsLocalFrame() &&
+  //       parent_frame->GetDocument()->GetPageGraph() != nullptr) {
+  //     LocalFrame* local_parent_frame = static_cast<LocalFrame*>(parent_frame);
+  //     const DOMNodeId node_id = frame_->GetPageGraphNodeIdInParentDocument();
+  //     current_request_id_ = local_parent_frame->GetDocument()->GetPageGraph()->GetNewRequestId();
+  //     local_parent_frame->GetDocument()->GetPageGraph()->RegisterRequestStartFromElm(
+  //       node_id, current_request_id_, ::brave_page_graph::kRequestTypeDocument
+  //     );
+  //   }
+  // }
+// #endif
+
   Client()->BeginNavigation(
       resource_request, request.GetFrameType(), origin_document,
       nullptr /* document_loader */, navigation_type,
@@ -1086,6 +1110,21 @@ mojom::CommitResult FrameLoader::CommitSameDocumentNavigation(
       frame_load_type = WebFrameLoadType::kReplaceCurrentItem;
   }
 
+// #if BUILDFLAG(BRAVE_PAGE_GRAPH_ENABLED)
+  // {
+  //   Frame* parent_frame = frame_->Tree().Parent();
+  //   if (parent_frame != nullptr &&
+  //       parent_frame->IsLocalFrame() &&
+  //       parent_frame->GetDocument()->GetPageGraph() != nullptr) {
+  //     LocalFrame* local_parent_frame = static_cast<LocalFrame*>(parent_frame);
+  //     local_parent_frame->GetDocument()->GetPageGraph()->RegisterRequestComplete(
+  //       current_request_id_,
+  //       ::brave_page_graph::kRequestTypeDocument
+  //     );
+  //   }
+  // }
+// #endif
+
   // Perform the same-document navigation.
   LoadInSameDocument(url, state_object, frame_load_type, history_item,
                      client_redirect_policy, origin_document,
